name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Cache dotnet-coverage tool
        id: cache-dotnet-coverage
        uses: actions/cache@v4
        with:
          path: .\.sonar\coverage
          key: ${{ runner.os }}-dotnet-coverage
          restore-keys: ${{ runner.os }}-dotnet-coverage
      - name: Install SonarQube Cloud tools
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true' || steps.cache-dotnet-coverage.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          if (!(Test-Path .\.sonar\scanner)) {
            New-Item -Path .\.sonar\scanner -ItemType Directory | Out-Null
          }
          if (!(Test-Path .\.sonar\coverage)) {
            New-Item -Path .\.sonar\coverage -ItemType Directory | Out-Null
          }
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          dotnet tool install dotnet-coverage --tool-path .\.sonar\coverage
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"svenfahrni_AutoQuiz" /o:"svenfahrni" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.exclusions="frontend/**"
          dotnet build
          .\.sonar\coverage\dotnet-coverage.exe collect "dotnet test" -f xml -o "coverage.xml"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"