name: SonarQube

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  sonar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache SonarQube scanner and dotnet-coverage tool
        uses: actions/cache@v4
        with:
          path: |
            .sonar/scanner
            .sonar/coverage
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/*.csproj') }}

      - name: Install SonarQube Cloud tools
        run: |
          mkdir -p .sonar/scanner .sonar/coverage
          dotnet tool install dotnet-sonarscanner --tool-path .sonar/scanner
          dotnet tool install dotnet-coverage --tool-path .sonar/coverage

      - name: Begin SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"svenfahrni_AutoQuiz" /o:"svenfahrni" /d:sonar.token="${SONAR_TOKEN}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.exclusions="frontend/**"

      - name: Build solution for SonarQube
        run: dotnet build quizlet.sln --configuration Release

      - name: Collect coverage and run tests
        run: |
          ./.sonar/coverage/dotnet-coverage collect "dotnet test ./Quizlet.Tests/Quizlet.Tests.csproj --no-build --configuration Release" -f xml -o coverage.xml

      - name: End SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${SONAR_TOKEN}"